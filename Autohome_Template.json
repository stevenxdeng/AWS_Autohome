AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    KinesisStream:
        Type: "AWS::Kinesis::Stream"
        DeletionPolicy: "Delete"
        Properties:
            Name: !Sub "${LambdaFunction}_Stream"
            RetentionPeriodHours: 24
            ShardCount: 1

    LambdaFunction:
        Type: "AWS::Lambda::Function"
        DeletionPolicy: "Delete"
        Properties:
            Description: ""
            FunctionName: "Autohome"
            Handler: "lambda_function.lambda_handler"
            Code: 
                S3Bucket: "autohome-application"
                S3Key: "Autohome.zip"
            MemorySize: 128
            Role: !GetAtt IAMRole.Arn
            Runtime: "python3.8"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"

    DynamoDBTable:
        Type: "AWS::DynamoDB::Table"
        DeletionPolicy: "Delete"
        Properties:
            AttributeDefinitions: 
              - 
                AttributeName: "Component_ID"
                AttributeType: "S"
            TableName: !Sub "${LambdaFunction}_collection"
            KeySchema: 
              - 
                AttributeName: "Component_ID"
                KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5

    DynamoDBTable2:
        Type: "AWS::DynamoDB::Table"
        DeletionPolicy: "Delete"
        Properties:
            AttributeDefinitions: 
              - 
                AttributeName: "Time_Stamp"
                AttributeType: "S"
            TableName: !Sub "${LambdaFunction}_logs"
            KeySchema: 
              - 
                AttributeName: "Time_Stamp"
                KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5

    IAMRole:
        Type: "AWS::IAM::Role"
        DeletionPolicy: "Delete"
        Properties:
            Path: "/"
            RoleName: "Autohome_Roles"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy
            Description: "Allows Lambda functions to call AWS services on your behalf."

    IAMManagedPolicy:
        Type: "AWS::IAM::ManagedPolicy"
        DeletionPolicy: "Delete"
        Properties:
            ManagedPolicyName: "Autohome_Policy"
            Path: "/"
            PolicyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "iot:*",
                                "lambda:*",
                                "dynamodb:*",
                                "kinesis:*"
                            ],
                            "Resource": "*"
                        }
                    ]
                }

    LambdaTrigger:
        Type: AWS::Lambda::EventSourceMapping
        Properties: 
            BatchSize: 100 
            Enabled: true
            EventSourceArn: !GetAtt KinesisStream.Arn
            FunctionName: !GetAtt LambdaFunction.Arn
            MaximumBatchingWindowInSeconds: 0
            StartingPosition: LATEST 
